<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.co.back.mapper.SenceMapper" >
  <resultMap id="BaseResultMap" type="com.co.back.entity.Sence" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sence_name" property="sence_name" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.co.back.entity.Sence" extends="BaseResultMap" >
    <result column="sence_desc" property="sence_desc" jdbcType="LONGVARCHAR" />
    <result column="sence_flow" property="sence_flow" jdbcType="LONGVARCHAR" />
    <result column="sence_global" property="sence_global" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sence_name, status, createtime
  </sql>
  <sql id="Blob_Column_List" >
    sence_desc, sence_flow, sence_global
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.co.back.entity.SenceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_sence
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.co.back.entity.SenceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_sence
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_sence
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_sence
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.co.back.entity.SenceExample" >
    delete from t_sence
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.co.back.entity.Sence" >
    insert into t_sence (id, sence_name, status, 
      createtime, sence_desc, sence_flow, 
      sence_global)
    values (#{id,jdbcType=INTEGER}, #{sence_name,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{sence_desc,jdbcType=LONGVARCHAR}, #{sence_flow,jdbcType=LONGVARCHAR}, 
      #{sence_global,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.co.back.entity.Sence" >
    insert into t_sence
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sence_name != null" >
        sence_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="sence_desc != null" >
        sence_desc,
      </if>
      <if test="sence_flow != null" >
        sence_flow,
      </if>
      <if test="sence_global != null" >
        sence_global,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sence_name != null" >
        #{sence_name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="sence_desc != null" >
        #{sence_desc,jdbcType=LONGVARCHAR},
      </if>
      <if test="sence_flow != null" >
        #{sence_flow,jdbcType=LONGVARCHAR},
      </if>
      <if test="sence_global != null" >
        #{sence_global,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.co.back.entity.SenceExample" resultType="java.lang.Integer" >
    select count(*) from t_sence
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_sence
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sence_name != null" >
        sence_name = #{record.sence_name,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sence_desc != null" >
        sence_desc = #{record.sence_desc,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sence_flow != null" >
        sence_flow = #{record.sence_flow,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sence_global != null" >
        sence_global = #{record.sence_global,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_sence
    set id = #{record.id,jdbcType=INTEGER},
      sence_name = #{record.sence_name,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      sence_desc = #{record.sence_desc,jdbcType=LONGVARCHAR},
      sence_flow = #{record.sence_flow,jdbcType=LONGVARCHAR},
      sence_global = #{record.sence_global,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_sence
    set id = #{record.id,jdbcType=INTEGER},
      sence_name = #{record.sence_name,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.co.back.entity.Sence" >
    update t_sence
    <set >
      <if test="sence_name != null" >
        sence_name = #{sence_name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="sence_desc != null" >
        sence_desc = #{sence_desc,jdbcType=LONGVARCHAR},
      </if>
      <if test="sence_flow != null" >
        sence_flow = #{sence_flow,jdbcType=LONGVARCHAR},
      </if>
      <if test="sence_global != null" >
        sence_global = #{sence_global,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.co.back.entity.Sence" >
    update t_sence
    set sence_name = #{sence_name,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      sence_desc = #{sence_desc,jdbcType=LONGVARCHAR},
      sence_flow = #{sence_flow,jdbcType=LONGVARCHAR},
      sence_global = #{sence_global,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.co.back.entity.Sence" >
    update t_sence
    set sence_name = #{sence_name,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>