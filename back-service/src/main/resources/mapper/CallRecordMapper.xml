<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.co.back.mapper.CallRecordMapper" >
  <resultMap id="BaseResultMap" type="com.co.back.entity.CallRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="call_number" property="call_number" jdbcType="VARCHAR" />
    <result column="resource" property="resource" jdbcType="VARCHAR" />
    <result column="call_batch" property="call_batch" jdbcType="VARCHAR" />
    <result column="call_stauts" property="call_stauts" jdbcType="INTEGER" />
    <result column="senceID" property="senceID" jdbcType="INTEGER" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.co.back.entity.CallRecord" extends="BaseResultMap" >
    <result column="call_data" property="call_data" jdbcType="LONGVARCHAR" />
    <result column="call_msg" property="call_msg" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, call_number, resource, call_batch, call_stauts, senceID, create_time
  </sql>
  <sql id="Blob_Column_List" >
    call_data, call_msg
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.co.back.entity.CallRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_call_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.co.back.entity.CallRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_call_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_call_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_call_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.co.back.entity.CallRecordExample" >
    delete from t_call_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.co.back.entity.CallRecord" >
    insert into t_call_record (id, call_number, resource, 
      call_batch, call_stauts, senceID, 
      create_time, call_data, call_msg
      )
    values (#{id,jdbcType=BIGINT}, #{call_number,jdbcType=VARCHAR}, #{resource,jdbcType=VARCHAR}, 
      #{call_batch,jdbcType=VARCHAR}, #{call_stauts,jdbcType=INTEGER}, #{senceID,jdbcType=INTEGER}, 
      #{create_time,jdbcType=TIMESTAMP}, #{call_data,jdbcType=LONGVARCHAR}, #{call_msg,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.co.back.entity.CallRecord" >
    insert into t_call_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="call_number != null" >
        call_number,
      </if>
      <if test="resource != null" >
        resource,
      </if>
      <if test="call_batch != null" >
        call_batch,
      </if>
      <if test="call_stauts != null" >
        call_stauts,
      </if>
      <if test="senceID != null" >
        senceID,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="call_data != null" >
        call_data,
      </if>
      <if test="call_msg != null" >
        call_msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="call_number != null" >
        #{call_number,jdbcType=VARCHAR},
      </if>
      <if test="resource != null" >
        #{resource,jdbcType=VARCHAR},
      </if>
      <if test="call_batch != null" >
        #{call_batch,jdbcType=VARCHAR},
      </if>
      <if test="call_stauts != null" >
        #{call_stauts,jdbcType=INTEGER},
      </if>
      <if test="senceID != null" >
        #{senceID,jdbcType=INTEGER},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="call_data != null" >
        #{call_data,jdbcType=LONGVARCHAR},
      </if>
      <if test="call_msg != null" >
        #{call_msg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.co.back.entity.CallRecordExample" resultType="java.lang.Integer" >
    select count(*) from t_call_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_call_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.call_number != null" >
        call_number = #{record.call_number,jdbcType=VARCHAR},
      </if>
      <if test="record.resource != null" >
        resource = #{record.resource,jdbcType=VARCHAR},
      </if>
      <if test="record.call_batch != null" >
        call_batch = #{record.call_batch,jdbcType=VARCHAR},
      </if>
      <if test="record.call_stauts != null" >
        call_stauts = #{record.call_stauts,jdbcType=INTEGER},
      </if>
      <if test="record.senceID != null" >
        senceID = #{record.senceID,jdbcType=INTEGER},
      </if>
      <if test="record.create_time != null" >
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.call_data != null" >
        call_data = #{record.call_data,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.call_msg != null" >
        call_msg = #{record.call_msg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_call_record
    set id = #{record.id,jdbcType=BIGINT},
      call_number = #{record.call_number,jdbcType=VARCHAR},
      resource = #{record.resource,jdbcType=VARCHAR},
      call_batch = #{record.call_batch,jdbcType=VARCHAR},
      call_stauts = #{record.call_stauts,jdbcType=INTEGER},
      senceID = #{record.senceID,jdbcType=INTEGER},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      call_data = #{record.call_data,jdbcType=LONGVARCHAR},
      call_msg = #{record.call_msg,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_call_record
    set id = #{record.id,jdbcType=BIGINT},
      call_number = #{record.call_number,jdbcType=VARCHAR},
      resource = #{record.resource,jdbcType=VARCHAR},
      call_batch = #{record.call_batch,jdbcType=VARCHAR},
      call_stauts = #{record.call_stauts,jdbcType=INTEGER},
      senceID = #{record.senceID,jdbcType=INTEGER},
      create_time = #{record.create_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.co.back.entity.CallRecord" >
    update t_call_record
    <set >
      <if test="call_number != null" >
        call_number = #{call_number,jdbcType=VARCHAR},
      </if>
      <if test="resource != null" >
        resource = #{resource,jdbcType=VARCHAR},
      </if>
      <if test="call_batch != null" >
        call_batch = #{call_batch,jdbcType=VARCHAR},
      </if>
      <if test="call_stauts != null" >
        call_stauts = #{call_stauts,jdbcType=INTEGER},
      </if>
      <if test="senceID != null" >
        senceID = #{senceID,jdbcType=INTEGER},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="call_data != null" >
        call_data = #{call_data,jdbcType=LONGVARCHAR},
      </if>
      <if test="call_msg != null" >
        call_msg = #{call_msg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.co.back.entity.CallRecord" >
    update t_call_record
    set call_number = #{call_number,jdbcType=VARCHAR},
      resource = #{resource,jdbcType=VARCHAR},
      call_batch = #{call_batch,jdbcType=VARCHAR},
      call_stauts = #{call_stauts,jdbcType=INTEGER},
      senceID = #{senceID,jdbcType=INTEGER},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      call_data = #{call_data,jdbcType=LONGVARCHAR},
      call_msg = #{call_msg,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.co.back.entity.CallRecord" >
    update t_call_record
    set call_number = #{call_number,jdbcType=VARCHAR},
      resource = #{resource,jdbcType=VARCHAR},
      call_batch = #{call_batch,jdbcType=VARCHAR},
      call_stauts = #{call_stauts,jdbcType=INTEGER},
      senceID = #{senceID,jdbcType=INTEGER},
      create_time = #{create_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>